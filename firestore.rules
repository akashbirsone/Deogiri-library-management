
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isStudent() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }
    function isAdmin() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isLibrarian() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'librarian';
    }
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow create: if request.auth.uid != null;
      allow read: if isOwner(userId) || isAdmin() || isLibrarian();
      allow update: if isOwner(userId) || isAdmin() || isLibrarian();
      allow delete: if isAdmin();
    }
    
    // Rules for the book catalog
    match /departments/{deptId}/courses/{courseId}/semesters/{semId}/subjects/{subjectId}/books/{bookId} {
      allow read: if request.auth.uid != null;
      allow create: if isAdmin() || isLibrarian();
      allow update: if isAdmin() || isLibrarian();
      allow delete: if isAdmin() || isLibrarian();
    }
    
    match /{path=**}/books/{bookId} {
       allow list: if request.auth.uid != null;
    }
  }
}

    