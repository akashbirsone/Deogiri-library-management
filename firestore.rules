
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      // The admin UID is hardcoded for this specific project.
      return request.auth.uid == 'Dzl57IC8VjVuwXwQwgNgHxssz3u2';
    }

    function isLibrarian() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'librarian';
    }

    function isStudent() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    function isAuthorized() {
      return isAdmin() || isLibrarian();
    }

    match /users/{userId} {
      allow create: if request.auth.uid != null;
      allow read, update: if isOwner(userId) || isAuthorized();
      allow delete: if isAdmin();
      allow list: if isAuthorized();
    }

    match /departments/{deptId}/courses/{courseId}/semesters/{semId}/subjects/{subjectId}/books/{bookId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if isAuthorized();
    }
    
    match /departments/{deptId}/courses/{courseId}/semesters/{semId}/subjects/{subjectId} {
       allow read: if request.auth.uid != null;
       allow write: if isAuthorized();
    }
    
     match /departments/{deptId}/courses/{courseId}/semesters/{semId} {
       allow read: if request.auth.uid != null;
       allow write: if isAuthorized();
    }
    
     match /departments/{deptId}/courses/{courseId} {
       allow read: if request.auth.uid != null;
       allow write: if isAuthorized();
    }
    
     match /departments/{deptId} {
       allow read: if request.auth.uid != null;
       allow write: if isAuthorized();
    }
  }
}
